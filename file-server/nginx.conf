user  uploader;
worker_processes  4;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;
load_module modules/ngx_stream_lua_module.so;
load_module modules/ngx_http_fancyindex_module.so;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  off;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    lua_package_path '/etc/nginx/lua/?.lua;;';
    client_max_body_size 500M;

    server {
        listen       80;
        listen  [::]:80;
        server_name  _;

        #access_log  /var/log/nginx/host.access.log  main;

        root   /data;

        location <URL_PREFIX>download {
            fancyindex on;
            fancyindex_localtime on; #on for local time zone. off for GMT
            fancyindex_exact_size off; #off for human-readable. on for exact size in bytes
            fancyindex_header "/fancyindex/header.html";
            fancyindex_footer "/fancyindex/footer.html";
            fancyindex_ignore "fancyindex" "ios-install-images"; #ignore these directories when showing list
            fancyindex_default_sort date_desc;
        }

        location ~ ^<URL_PREFIX>upload(/.*)?$ {
            set $store_path /data<URL_PREFIX>download$1/;
            content_by_lua_file lua/my-upload.lua;
        }

        location ~ ^<URL_PREFIX>delete/(.*)$ {
            set $file_path /data<URL_PREFIX>download/$1;
            content_by_lua_file lua/my-delete.lua;
        }
    }
}
